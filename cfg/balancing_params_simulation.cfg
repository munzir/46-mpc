urdfpath = "/usr/local/share/krang/urdf/Krang/Krang.urdf";
#comParametersPath = ""; # To continue using parameters in urdf
comParametersPath = "/usr/local/share/krang/betaConvergence/bestBetaVector.txt";
pdGainsGroundLo = "0 0 0 -50 0 -25"; #th, dth, x, dx, psi, dpsi # simulation
pdGainsStand = "277.4 61.889 7.4484 18.235 0 0";
pdGainsSit = "250 40 0 0 0 0";
pdGainsBalLo = "277.4 61.889 7.4484 18.235 -0 -10";
pdGainsBalHi = "500 90 0.5 5 -0 -5";
pdGainsGroundHi = "0 0 0 -10 0 -25";
joystickGainsGroundLo = "2 -1.3";
joystickGainsStand = "0 0";
joystickGainsSit = "0 0";
joystickGainsBalLo = "2 -1.3";
joystickGainsBalHi = "2 -1.3";
joystickGainsGroundHi = "2 -1.3";
dynamicLQR = "true";
lqrQ = "300 96000 30000 90000";
lqrR = "500";
imuSitAngle = "-101.0"; #(degrees) if angle <value, SIT mode transitions to GROUND LO
toBalThreshold = "0.03"; #(rad/sec) if CoM angle speed <value, STAND mode transitions to BAL LO
startBalThresholdLo = "-15.0"; #(degrees) if COM angle err > value, krang refuses to stand
startBalThresholdHi = "12.0"; #(degrees) if COM angle err < value, krang refuses to stand
manualArmLockUnlock = "false";#true, manually lock / unlock based on keyb / joys,
                             #false, automatically lock / unlock based on motor cmds
waistHiLoThreshold = "150.0"; #(degrees)
maxInputCurrent = "50.0";

# Initial pose parameters
heading_init = "0.0";
q_base_init = "-1.89";
xyz_init = "0.0 0.0 0.27";
q_lwheel_init = "0.0";
q_rwheel_init = "0.0";
q_waist_init = "2.63"; # works in simulation with bestBetaVector
#q_waist_init = "2.63"; # adrc trials with default urdf parameters (worst beta vector)
q_torso_init = "0.0";
q_kinect_init = "0.0";
q_left_arm_init = "  1.130 -1.000  0.000 -1.570 -0.000  1.000  -1.104";
q_right_arm_init = " -1.130  1.000 -0.000  1.570  0.000 -1.000  -0.958";

init_with_balance_pose = "false";
